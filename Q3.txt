Q3. What are loops, and what do we need them? Explain different types of loops 
with their syntax and examples.


What are loops, and what do we need them?

	Loops are used in JavaScript to perform repeated tasks based on a condition.
 Conditions typically return true or false. A loop will continue running until the 
defined condition returns false.

	JavaScript Loops are powerful tools for performing repetitive tasks efficiently.
 Loops in JavaScript execute a block of code again and again while the condition is true.

	For example, suppose we want to print “Hello World” 5 times. This can be done 
using JS Loop easily. In Loop.


Explain different types of loops with their syntax and examples.

for Loop

Syntax
for (initialization; condition; finalExpression) {
  // code
}

	for loops are commonly used to run code a set number of times. Also, 
you can use break to exit the loop early, before the condition expression 
evaluates to false.

Example:
for (let i = 0; i < 5; i++) {
  console.log(i);
}

// Output:
// 0
// 1
// 2
// 3
// 4
// 5


while Loop

Syntax
while (condition) {
  // statement
}

	The while loop starts by evaluating condition. If condition evaluates to true,
 the code in the code block gets executed. If condition evaluates to false, the code 
in the code block is not executed and the loop ends.

Example:
let i = 1;

while (i < 5) {
  console.log(i);
  i++;
}

// Output:
// 1
// 2
// 3
// 4
// 5

do...while loop

Syntax:
do {
  // statement
} while (condition);

	The do...while loop is closely related to while loop. In a do...while loop, 
condition is checked at the end of each iteration of the loop, rather than at the 
beginning before the loop runs.
	This means that code in a do...while loop is guaranteed to run at least once, 
even if the condition expression already evaluates to true.

Example:
let i = 1;

do {
  console.log(i);
  i++;
} while (i < 5);

// Output:
// 1
// 2
// 3
// 4
// 5

